{
  "name": "AI Article Generation with Quality Control",
  "nodes": [
    {
      "parameters": {
        "authentication": "none",
        "httpMethod": "POST",
        "options": {},
        "path": "article-generation",
        "responseMode": "onReceived"
      },
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "article-generation-webhook"
    },
    {
      "parameters": {
        "values": {
          "boolean": [],
          "number": [
            {
              "name": "attemptCount",
              "value": 0
            },
            {
              "name": "maxAttempts",
              "value": 5
            },
            {
              "name": "targetAIScore",
              "value": 10
            },
            {
              "name": "wordCount",
              "value": "={{ $json.wordCount }}"
            }
          ],
          "string": [
            {
              "name": "originalPrompt",
              "value": "={{ $json.prompt }}"
            },
            {
              "name": "tone",
              "value": "={{ $json.tone || \"professional\" }}"
            },
            {
              "name": "currentArticle",
              "value": ""
            },
            {
              "name": "finalAIScore",
              "value": 0
            }
          ]
        }
      },
      "name": "Set Initial Variables",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "text": "={{ \"You are a professional content writer. Write a \" + $(\"Set Initial Variables\").json[\"tone\"] + \" article about \" + $(\"Set Initial Variables\").json[\"originalPrompt\"] + \" that is approximately \" + $(\"Set Initial Variables\").json[\"wordCount\"] + \" words. Requirements: - Natural, human-like writing style - Proper structure with headings and paragraphs - Engaging and informative content - Avoid repetitive patterns - Use varied sentence structures - Include relevant examples when appropriate\" }}",
        "resource": "model",
        "operation": "complete",
        "model": "gpt-3.5-turbo",
        "temperature": 0.7,
        "maxTokens": "={{ Math.round($(\"Set Initial Variables\").json[\"wordCount\"] * 1.3) }}",
        "topP": 1,
        "options": {}
      },
      "name": "OpenAI Article Generation",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 3,
      "position": [680, 300],
      "credentials": {
        "openAiApi": {
          "id": "2nipFUqTLSnWySli",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.sapling.ai/api/v1/aidetect",
        "authentication": "none",
        "requestMethod": "POST",
        "headers": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": true,
        "body": {
          "json": {
            "key": "={{$credentials.SAPLING_API_KEY}}",
            "text": "={{ $(\"OpenAI Article Generation\").json[\"choices\"][0][\"message\"][\"content\"] }}"
          }
        },
        "options": {
          "fullResponse": false,
          "splitIntoItems": false,
          "response": {
            "response": {
              "maxTimeout": 30000
            }
          }
        }
      },
      "name": "Sapling AI Detection",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [900, 300],
      "credentials": {
        "httpRequest": {
          "id": "N4dAoqYDTDe93xQv",
          "name": "Sapling API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $(\"Sapling AI Detection\").json[\"score\"] * 100 }}",
              "rightValue": "={{ $(\"Set Initial Variables\").json[\"targetAIScore\"] }}",
              "operator": {
                "type": "number",
                "operation": "smaller"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "name": "AI Score Evaluation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "values": {
          "boolean": [],
          "number": [
            {
              "name": "attemptCount",
              "value": "={{ $(\"Set Initial Variables\").json[\"attemptCount\"] + 1 }}"
            }
          ],
          "string": []
        },
        "options": {}
      },
      "name": "Increment Attempt Counter",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [1120, 500]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.attemptCount }}",
              "rightValue": "={{ $(\"Set Initial Variables\").json[\"maxAttempts\"] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "name": "Check Max Attempts",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1320, 500]
    },
    {
      "parameters": {
        "text": "={{ \"Rewrite the following article to make it sound more human and natural. The current AI detection score is \" + ($(\"Sapling AI Detection\").json[\"score\"] * 100) + \"%. Focus on: - Adding personal touches and varied sentence structures - Using more conversational language while maintaining \" + $(\"Set Initial Variables\").json[\"tone\"] + \" tone - Including transitional phrases and natural flow - Adding subtle imperfections that humans naturally include - Varying paragraph lengths and structures Original article: \" + $(\"OpenAI Article Generation\").json[\"choices\"][0][\"message\"][\"content\"] + \" Maintain the same topic, word count (~\" + $(\"Set Initial Variables\").json[\"wordCount\"] + \" words), and core information.\" }}",
        "resource": "model",
        "operation": "complete",
        "model": "gpt-3.5-turbo",
        "temperature": 0.8,
        "maxTokens": "={{ Math.round($(\"Set Initial Variables\").json[\"wordCount\"] * 1.3) }}",
        "topP": 1,
        "options": {}
      },
      "name": "Article Rewrite",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 3,
      "position": [1320, 700],
      "credentials": {
        "openAiApi": {
          "id": "2nipFUqTLSnWySli",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "branch": 0
      },
      "name": "Loop Back Node",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [1540, 700]
    },
    {
      "parameters": {
        "operation": "append",
        "resource": "Articles",
        "columns": {
          "values": [
            {
              "column": "Article Title",
              "value": "={{ $(\"Set Initial Variables\").json[\"originalPrompt\"] }}"
            },
            {
              "column": "Content",
              "value": "={{ $(\"OpenAI Article Generation\").json[\"choices\"][0][\"message\"][\"content\"] }}"
            },
            {
              "column": "Word Count",
              "value": "={{ $(\"Set Initial Variables\").json[\"wordCount\"] }}"
            },
            {
              "column": "Tone",
              "value": "={{ $(\"Set Initial Variables\").json[\"tone\"] }}"
            },
            {
              "column": "AI Detection Score",
              "value": "={{ ($(\"Sapling AI Detection\").json[\"score\"] * 100) + \"%\" }}"
            },
            {
              "column": "Attempts Used",
              "value": "={{ $(\"Increment Attempt Counter\").json[\"attemptCount\"] }}"
            },
            {
              "column": "Created Date",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "column": "Status",
              "value": "={{ ($(\"Sapling AI Detection\").json[\"score\"] * 100) < 10 ? 'Success' : 'Max Attempts Reached' }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Airtable Save",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 3,
      "position": [1540, 300],
      "credentials": {
        "airtableApi": {
          "id": "lsSVzmWHf9W8pVYi",
          "name": "Airtable API"
        }
      }
    },
    {
      "parameters": {
        "body": {
          "json": {
            "status": "success",
            "message": "Article generated successfully",
            "aiScore": "={{ ($(\"Sapling AI Detection\").json[\"score\"] * 100) + \"%\" }}",
            "attemptsUsed": "={{ $(\"Increment Attempt Counter\").json[\"attemptCount\"] }}",
            "wordCount": "={{ $(\"Set Initial Variables\").json[\"wordCount\"] }}"
          }
        },
        "options": {},
        "responseCode": 200
      },
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1760, 300]
    },
    {
      "parameters": {
        "body": {
          "json": {
            "status": "partial_success",
            "message": "Article generated but AI detection score above target",
            "aiScore": "={{ ($(\"Sapling AI Detection\").json[\"score\"] * 100) + \"%\" }}",
            "attemptsUsed": "={{ $(\"Set Initial Variables\").json[\"maxAttempts\"] }}",
            "wordCount": "={{ $(\"Set Initial Variables\").json[\"wordCount\"] }}"
          }
        },
        "options": {},
        "responseCode": 200
      },
      "name": "Max Attempts Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1760, 500]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Set Initial Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Initial Variables": {
      "main": [
        [
          {
            "node": "OpenAI Article Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Article Generation": {
      "main": [
        [
          {
            "node": "Sapling AI Detection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sapling AI Detection": {
      "main": [
        [
          {
            "node": "AI Score Evaluation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Score Evaluation": {
      "main": [
        [
          {
            "node": "Airtable Save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Score Evaluation": {
      "main": [
        [
          {
            "node": "Increment Attempt Counter",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Increment Attempt Counter": {
      "main": [
        [
          {
            "node": "Check Max Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Max Attempts": {
      "main": [
        [
          {
            "node": "Article Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Max Attempts": {
      "main": [
        [
          {
            "node": "Airtable Save",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Article Rewrite": {
      "main": [
        [
          {
            "node": "Loop Back Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Back Node": {
      "main": [
        [
          {
            "node": "Sapling AI Detection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtable Save": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtable Save": {
      "main": [
        [
          {
            "node": "Max Attempts Response",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "pinData": {},
  "versionId": "1",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": []
}
